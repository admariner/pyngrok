name: Build

run-name: Build ${{ github.ref_name }}

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: "0 9 * * *"
  workflow_dispatch:
  workflow_call:

concurrency:
  group: pyngrok-singleton

jobs:
  validate:
    name: Validate
    uses: ./.github/workflows/validate.yml
    secrets: inherit

  build:
    name: Build

    env:
      FORCE_COLOR: 1
      PYTHONDONTWRITEBYTECODE: 1
      NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
      NGROK_API_KEY: ${{ secrets.NGROK_API_KEY }}
      NGROK_SUBDOMAIN: ${{ github.repository_owner }}
      NGROK_HOSTNAME: ${{ needs.init.outputs.NGROK_HOSTNAME }}
      NGROK_DOMAIN: ${{ needs.init.outputs.NGROK_DOMAIN }}
      NGROK_TCP_EDGE_ADDR: ${{ needs.init.outputs.NGROK_TCP_EDGE_ADDR }}
      NGROK_TCP_EDGE_ID: ${{ needs.init.outputs.NGROK_TCP_EDGE_ID }}
      NGROK_HTTP_EDGE_DOMAIN: ${{ needs.init.outputs.NGROK_HTTP_EDGE_DOMAIN }}
      NGROK_HTTP_EDGE_ID: ${{ needs.init.outputs.NGROK_HTTP_EDGE_ID }}
      NGROK_TLS_EDGE_DOMAIN: ${{ needs.init.outputs.NGROK_TLS_EDGE_DOMAIN }}
      NGROK_TLS_EDGE_ID: ${{ needs.init.outputs.NGROK_TLS_EDGE_ID }}

    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ "3.12" ]
        include:
          - python-version: "3.8"
            os: ubuntu-latest
          - python-version: "3.9"
            os: ubuntu-latest
          - python-version: "3.10"
            os: ubuntu-latest
          - python-version: "3.11"
            os: ubuntu-latest
          - python-version: "pypy-3.9"
            os: ubuntu-latest
          - python-version: "pypy-3.10"
            os: ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: make install
      - name: Test
        run: make test
